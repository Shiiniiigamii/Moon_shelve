# Generated by Django 5.1.6 on 2025-02-28 09:57

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('address_id', models.AutoField(primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=50)),
                ('street', models.CharField(max_length=256)),
                ('apartment', models.CharField(max_length=50)),
                ('entrance', models.SmallIntegerField(blank=True, null=True)),
                ('floor', models.SmallIntegerField(blank=True, null=True)),
                ('intercom', models.SmallIntegerField(blank=True, null=True)),
                ('clarification_to_the_address', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Authors',
            fields=[
                ('author_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'authors',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('basket_id', models.AutoField(primary_key=True, serialize=False)),
                ('book_id', models.UUIDField(unique=True)),
                ('quantity', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'basket',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BindingType',
            fields=[
                ('binding_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('name_binding_type', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'binding_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('book_id', models.UUIDField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('price_book', models.DecimalField(decimal_places=2, max_digits=10)),
                ('rating', models.SmallIntegerField(blank=True, null=True)),
                ('stock', models.IntegerField(blank=True, null=True)),
                ('image_path', models.TextField()),
                ('age_limit', models.CharField(blank=True, max_length=3, null=True)),
                ('description', models.TextField()),
                ('circulation', models.IntegerField()),
                ('weight', models.SmallIntegerField()),
                ('size', models.CharField(max_length=20)),
                ('isbn', models.CharField(max_length=20)),
                ('pages', models.SmallIntegerField()),
                ('year_release', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'books',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookSeries',
            fields=[
                ('book_series_id', models.AutoField(primary_key=True, serialize=False)),
                ('name_book_series', models.CharField(max_length=256, unique=True)),
            ],
            options={
                'db_table': 'book_series',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name_category', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeneralsProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.CharField(blank=True, max_length=50, null=True)),
                ('number_of_punched_sheets', models.SmallIntegerField(blank=True, null=True)),
                ('calculator_bit_size', models.SmallIntegerField(blank=True, null=True)),
                ('number_stapler', models.CharField(blank=True, max_length=10, null=True)),
                ('peculiarity', models.TextField(blank=True, null=True)),
                ('number_staples', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'generals_products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('genre_id', models.AutoField(primary_key=True, serialize=False)),
                ('name_genre', models.TextField(blank=True, null=True, unique=True)),
            ],
            options={
                'db_table': 'genre',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GenreBooks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'genre_books',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('code', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'languages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrderDetails',
            fields=[
                ('order_detail_id', models.UUIDField(primary_key=True, serialize=False)),
                ('book_id', models.UUIDField()),
                ('quantity', models.SmallIntegerField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=15)),
            ],
            options={
                'db_table': 'order_details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.UUIDField(primary_key=True, serialize=False)),
                ('user_id', models.UUIDField()),
                ('order_date', models.DateTimeField()),
                ('status', models.TextField()),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaperProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_sheets', models.SmallIntegerField(blank=True, null=True)),
                ('format', models.CharField(blank=True, max_length=10, null=True)),
                ('type_of_ruler', models.CharField(blank=True, max_length=50, null=True)),
                ('peculiarity', models.TextField(blank=True, null=True)),
                ('mounting_type', models.CharField(blank=True, max_length=50, null=True)),
                ('calendar_year', models.SmallIntegerField(blank=True, null=True)),
                ('quantity_colors', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'paper_products',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.UUIDField(primary_key=True, serialize=False)),
                ('user_id', models.UUIDField(blank=True, null=True)),
                ('payment_date', models.DateTimeField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('payment_method', models.TextField()),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('status', models.CharField(choices=[('успешно', 'Успешно'), ('ошибка', 'Ошибка'), ('ожидание', 'Ожидание'), ('возврат', 'Возврат')], default='ожидание', max_length=20)),
            ],
            options={
                'db_table': 'payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('promotion_id', models.UUIDField(primary_key=True, serialize=False)),
                ('book_id', models.UUIDField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('describe', models.TextField()),
            ],
            options={
                'db_table': 'promotion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PromotionType',
            fields=[
                ('promotion_type_id', models.UUIDField(primary_key=True, serialize=False)),
                ('image_url', models.TextField()),
                ('type_name', models.TextField()),
                ('parameters', models.JSONField()),
            ],
            options={
                'db_table': 'promotion_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('publisher_id', models.AutoField(primary_key=True, serialize=False)),
                ('name_publisher', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'publisher',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_id', models.UUIDField(unique=True)),
                ('rating', models.SmallIntegerField(blank=True, null=True)),
                ('comment', models.CharField(max_length=255)),
                ('review_date', models.DateField()),
            ],
            options={
                'db_table': 'reviews',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stationery',
            fields=[
                ('stationery_id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('price_stationery', models.DecimalField(decimal_places=2, max_digits=15)),
                ('stock', models.IntegerField(blank=True, null=True)),
                ('date_of_receipt', models.DateTimeField()),
                ('size', models.CharField(blank=True, max_length=20, null=True)),
                ('weight', models.SmallIntegerField(blank=True, null=True)),
                ('age_limit', models.CharField(blank=True, max_length=3, null=True)),
                ('material_color', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'stationery',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StorageType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('material', models.CharField(blank=True, max_length=50, null=True)),
                ('number_of_branches', models.SmallIntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('peculiarity', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'storage_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('subcategory_id', models.AutoField(primary_key=True, serialize=False)),
                ('name_subcategory', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'db_table': 'subcategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubcategoryStationery',
            fields=[
                ('subcategory_id', models.UUIDField(primary_key=True, serialize=False)),
                ('name_subcategory', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'subcategory_stationery',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subscriptions',
            fields=[
                ('subscriptions_id', models.AutoField(primary_key=True, serialize=False)),
                ('author_id', models.IntegerField(blank=True, null=True)),
                ('publisher_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'subscriptions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('email', models.CharField(max_length=254, unique=True)),
                ('password', models.TextField()),
                ('name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=30)),
                ('phone', models.CharField(max_length=16, unique=True)),
                ('is_admin', models.BooleanField()),
                ('date_registered', models.DateTimeField()),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.UUIDField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Wishlists',
            fields=[
                ('wishlist_id', models.AutoField(primary_key=True, serialize=False)),
                ('book_id', models.UUIDField(unique=True)),
            ],
            options={
                'db_table': 'wishlists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WritingMaterials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inc_color', models.CharField(blank=True, max_length=50, null=True)),
                ('inc_base', models.CharField(blank=True, max_length=50, null=True)),
                ('pen_thickness', models.CharField(blank=True, max_length=50, null=True)),
                ('peculiarity', models.TextField(blank=True, null=True)),
                ('quantity_colors', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'writing_materials',
                'managed': False,
            },
        ),
    ]
